from aiogram import types
from aiogram.dispatcher import FSMContext

from aiogram.types import CallbackQuery
from aiogram.utils.markdown import hbold

from functions.functions import if_data_in_response
from keyboards.default import menu_uk_kb_show
from keyboards.default.share import phone_share_kb
from keyboards.inline.my_parcels import my_parcels_callback_kb
from loader import dp, bot, db
from meest_api.appApi import parcels_delivery_archive
from asgiref.sync import sync_to_async


@dp.callback_query_handler(lambda query: query.data == "archive")
async def parcel_mode_archive(call: CallbackQuery, state: FSMContext):
    user_id = call.from_user.id
    data = call.data
    print(data)
    await bot.answer_callback_query(callback_query_id=call.id)
    await call.answer(cache_time=60)
    user_data = await if_data_in_response(await db.get_user_data(user_id))
    if user_data is False:
        return await call.message.answer(
            call.from_user.first_name + hbold(", –¥–ª—è –ø–æ—á–∞—Ç–∫—É —Ä–æ–±–æ—Ç–∏ –∑ —Å–µ—Ä–≤—ñ—Å–æ–º –ø–æ–¥—ñ–ª—ñ—Ç—å—Å—è –í–∞—à–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É\n"
                                              "–∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–Ω–æ–ø–∫–∏ –∑–Ω–∏–∑—É üëá"), reply_markup=phone_share_kb)
    user_phone = user_data['phone_number']
    print(user_phone)
    result = await sync_to_async(parcels_delivery_archive)(user_phone, data)
    if result is False:
        await call.message.delete_reply_markup()
        await call.message.delete()
        await call.message.answer(call.from_user.first_name + hbold(
            ", –Ω–∞ —Ü–µ–π —á–∞—Å —É –í–∞—Å –Ω–µ –º–∞—î –∞—Ä—Ö—ñ–≤–Ω–∏—Ö –ø–æ—Å–∏–ª–æ–∫."), reply_markup=menu_uk_kb_show)
    # –ù—É–∂–Ω–æ —á—Ç–æ–± –Ω–æ–º–µ—Ä –ø–æ—Å—ã–ª–∫–∏ –∑–∞–Ω–æ—Å–∏–ª—Å—è –≤–æ –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –ø–æ –æ—á–µ—Ä–µ–¥–∏
    # result = (parcels_for_delivery(user_phone, data))
    else:
        for i in result:
            await call.message.answer(
                i['text'],
                parse_mode=types.ParseMode.HTML)
            await call.message.answer(f"{call.from_user.first_name} ,<b>–æ–±–µ—Ä—ñ—Ç—å —Ñ—ñ–ª—å—Ç—Ä –¥–ª—è –í–∞—à–∏—Ö –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω—å</b>",
                              reply_markup=my_parcels_callback_kb)
